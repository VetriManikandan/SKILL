import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import SimpleRNN, Dense

# Prepare dataset: Let's simulate time series data for RNN
data = np.array([i for i in range(1, 21)])  # Sample time series data

# Reshape data to be 3D (samples, time steps, features)
X = data[:-1].reshape(-1, 1, 1)
y = data[1:]

# Split into training and testing
X_train, X_test, y_train, y_test = X[:15], X[15:], y[:15], y[15:]

# Build RNN model
model = Sequential([
    SimpleRNN(10, input_shape=(1, 1), activation='relu'),
    Dense(1)
])

model.compile(optimizer='adam', loss='mse')

# Train the model
model.fit(X_train, y_train, epochs=100, verbose=0)

# Evaluate the model
loss = model.evaluate(X_test, y_test, verbose=0)
print(f"RNN Test loss: {loss:.4f}")
